library(DescTools)
#a) 

#a -  Eine Funktion, die verschiedene geeignete deskriptive Statistiken fuer 
#     metrische Variablen berechnet und ausgibt.
#
#Input: x - ein Vektor, der qualitative Merkmale enthaelt, die auf einer 
#           metrischen Skala basieren
#
#Output: eine benannte Liste mit folgenden deskriptiven Statistiken:
#       - arithmetisches Mittel
#       - 10% getrimmtes Mittel
#       - Median
#       - Varianz
#       - Standardabweichung
#       - Minimum
#       - Maximum
#       - Spannweite
#       - Quantile 


a <- function(x)
{
  am <- mean(x)
  gm <- mean(x,trim = 0.1)
  med <- median(x)
  va <- var(x)
  sa <- sd(x)
  quantil <- quantile(x, c(0.25,0.5,0.75))
  mi <- min(x)
  ma <- max(x)
  sp <- ma - mi
  n <- length(x)
  mqa <- sum((x - am)^2) / n
  
  
  return(list("arithmetisches Mittel" = am,
              "10% getrimmtes Mittel" = gm,
              "Median" = med,
              "Varianz" = va,
              "Standardabweichung" = sa,
              "Minimum" = mi,
              "Maximum" = ma,
              "Spannweite" = sp,
              "Quantile" = quantil,
              "Variationskoeffizient" = (sqrt(mqa)/am)))
}


#b) 

#b -  Eine Funktion, die verschiedene geeignete deskriptive Statistiken
#     fuer kategoriale Variablen berechnet und ausgibt
#
#Input: x - ein Vektor, der kategoriel skalierte Merkmale enthaelt
#
#Output: : eine Liste welche die Gesamtanzahl der Elemente und den Modus angibt

#Hilfsfuntion die in Funktion-R-Skript-2 ausgelagert werden kann
modus <- function(x){
  for(i in 1:length(table(x))){
    if(table(x)[i] == max(table(x))){
      return(table(x)[i])
    }
  }
}

b<-function(x){
  return(list( Anzahl = length(x), "Modus" = modus(x) ))
}


#c)

#c - Eine Funktion, die geeignete deskriptive bivariate Statistiken fuer
#den Zusammenhang zwischen zwei kategorialen Variablen
#berechnet ausgibt
#
#
#Input: x,y,z: x = Kategorialer Vektor, y = Kategorialer Vektor, z = Wert von 0 oder 1
#
#
#Output: z = 0: Gibt verschiedene Koeffizienten für x und y an.
#        z = 1: Gibt den Chi^2 Test für x und y an.
#
# 


cc <- function(x,y,z)
{
  if(length(x) == length(y))
  {
    if(z == 0)
    {
      return(Assocs(table(x,y)))
    }
    if(z == 1)
    {
      return(chisq.test(x,y))
    }
  }
  else
  {
    return("Die Varaiblen x und y muessen die gleiche Laenge haben")
  }
}




#d)

#d - Eine Funktion, die geeignete deskriptive bivariate Statistiken fuer
#den Zusammengang zwischen einer metrischen und einer
#dichotomen Variablen berechnet und ausgibt

d = function(a,b){
  neu = c()
  if(is.numeric(a)){                  #a numerisch?
    if(!is.numeric(b)){               #b dichotom?
      for(i in 1:length(b)){        
        temp = b[1]
        if(b[i] == temp){              #macht b zu einem Vektor mit 0 und 1
          neu[i] = 1
        }else{
          neu[i] = 0
        }
      }
    }else{
      stop("b nicht dichotom")
    }
  }else{
    stop("a nicht numerisch")
  }
  return(cor(a,neu))
    
}

#Teste die Funktion d
d(result$InteresseAnMathematik, result$MatheLK)



#e)

#e -  Eine Funktion, die eine mindestens ordinal skalierte Variable
#quantilbasiert kategorisiert (z.B. in "niedrig", "mittel", "hoch")
#
#
#Input: x = ordinal skalierter Vektor
#
#Output: Liste 
#
#

e = function(x)
{
  if (!is.numeric(x)){
    return("Variablen sind nicht ordinal")
  }
  else
  {
    v = c()
    for( i in 1:length(x))
    {
      if(x[i] < quantile(x,0.25))
      {
        v[i] = "niedrig"
      }
      if(x[i] >= quantile(x,0.25) & x[i] <= quantile(x,0.65))
      {
        v[i] = "mittel"
      }
      if(x[i] > quantile(x,0.65))
      {
        v[i] = "hoch"
      }
    }
    tabelle = table(v)
    return(list("Vektor" = v,"Tabelle" = tabelle))
  }
}


#f)
#
#f - Eine Funktion, die eine geeignete Visualisierung von drei oder vier
#kategorialen Variablen erstellt
#
#
#Input: a = Vektor mit kategoriellen Variablen fuer ein Balkendiagramm
#       b = Vektor mit kategoriellen Variablen fuer ein Kreisdiagramm
#       c = Vektor mit kategoriellen Variablen fuer ein Stripchart       
#       d = Vektor mit kategoriellen Variablen fuer ein Boxplot
#
#Output: je nachdem ob in c und d numerische Werte enthaelten sind, werden 2 bis 4 Grafiken
#        zur Veranschaulichung der Daten abgebildet
#
#


f = function(a,b,c,d){
  par(mar=c(5.1,4.1,2.1,2.1), mfrow=c(2,2))
  
  barplot(table(a), ylab = "absolute Haeufigkeiten",
          ylim = c(0, max(table(a)+5)), col = blues9[(3:9)], main = deparse(substitute(a)), cex.main = 1.1)
  
  pie(table(b), radius = 1, col = blues9[(2:9)], main = deparse(substitute(b)), cex.main = 1.1)
  
  if(is.numeric(c)){
  stripchart(c, method="stack",pch=22,at=0.2, axes=FALSE, xlim=range(pretty(c)), col = blues9[(9:9)],
             ylab = "Anzahl der Studierenden", cex.main = 1.1, ylim =c(0,max(table(c)+5)), bg = blues9[4])
  axis(1)
  
  if(is.numeric(d)){
    boxplot(d, col = "lightblue", main = deparse(substitute(d)), cex.main = 1.1, horizontal = TRUE)
  }
  }
}

#Fuer das testen der Funktion f

f(result$Studienfach, result$InteresseAnMathematik, result$InteresseAnProgrammieren, result$Alter)


